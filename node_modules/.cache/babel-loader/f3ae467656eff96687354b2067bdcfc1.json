{"ast":null,"code":"import _regeneratorRuntime from\"/Users/corycatherall/Desktop/kc-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/corycatherall/Desktop/kc-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/corycatherall/Desktop/kc-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyAOq8mgZWz0yyRvYIZHDfGOSsa5mhMoDbA\",authDomain:\"kc-clothing-6b829.firebaseapp.com\",databaseURL:\"https://kc-clothing-6b829.firebaseio.com\",projectId:\"kc-clothing-6b829\",storageBucket:\"kc-clothing-6b829.appspot.com\",messagingSenderId:\"449503952466\",appId:\"1:449503952466:web:f671e5e53e108a8aa4a98b\",measurementId:\"G-YRSBLDC7R2\"};firebase.initializeApp(config);export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,objectsToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:collectionRef=firestore.collection(collectionKey);console.log(collectionRef);//batching all calls together into one big request\nbatch=firestore.batch();objectsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();// create new doc ref and generate a random id for each one\nbatch.set(newDocRef,obj);});_context2.next=6;return batch.commit();case 6:return _context2.abrupt(\"return\",_context2.sent);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();//parsing collections snapshot to useable format for the front end.\nexport var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{//encode URI encodes the returned routeName into a url readable format read more on MDN\nrouteName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(accumulator,collection){// destructuring title out of items array returned from collections collection in firestore.\n// using reduce to return an object containing correct information pertaining to each collection Item\naccumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};export var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var auth=firebase.auth();export var firestore=firebase.firestore();export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["/Users/corycatherall/Desktop/kc-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyAOq8mgZWz0yyRvYIZHDfGOSsa5mhMoDbA\",\n    authDomain: \"kc-clothing-6b829.firebaseapp.com\",\n    databaseURL: \"https://kc-clothing-6b829.firebaseio.com\",\n    projectId: \"kc-clothing-6b829\",\n    storageBucket: \"kc-clothing-6b829.appspot.com\",\n    messagingSenderId: \"449503952466\",\n    appId: \"1:449503952466:web:f671e5e53e108a8aa4a98b\",\n    measurementId: \"G-YRSBLDC7R2\"\n  };\n\n  firebase.initializeApp(config);\n\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n\n    const snapShot = await userRef.get()\n\n    if(!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try{\n\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n\n        } catch(error) {\n            console.log('error creating user', error.message);\n        }\n    }\n    return userRef;\n  }\n\n  export const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n      const collectionRef = firestore.collection(collectionKey);\n      console.log(collectionRef)\n\n      //batching all calls together into one big request\n      const batch = firestore.batch();\n      objectsToAdd.forEach(obj => {\n          const newDocRef = collectionRef.doc(); // create new doc ref and generate a random id for each one\n            batch.set(newDocRef, obj)\n    });\n        return await batch.commit()\n  };\n\n\n  //parsing collections snapshot to useable format for the front end.\n export const convertCollectionsSnapshotToMap = (collections) => {\n      const transformedCollection = collections.docs.map(doc => {\n          const { title, items } = doc.data();\n\n          return {\n              //encode URI encodes the returned routeName into a url readable format read more on MDN\n              routeName: encodeURI(title.toLowerCase()),\n              id: doc.id,\n              title,\n              items\n          }\n       });\n       \n        return  transformedCollection.reduce((accumulator, collection) => {\n            // destructuring title out of items array returned from collections collection in firestore.\n            // using reduce to return an object containing correct information pertaining to each collection Item\n        accumulator[collection.title.toLowerCase()] = collection;\n        return accumulator\n         } ,{})\n}\n\nexport const getCurrentUser =  () => {\n    return new Promise((resolve, reject) => {\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\n            unsubscribe();\n            resolve(userAuth)\n        }, reject)\n    })\n}\n\n  \n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n "]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import{createSelector}from'reselect';var selectShop=function selectShop(state){return state.shop;};//shop is from rootReducer where {shop: shopReducer}\nexport var selectCollections=createSelector([selectShop],function(shop){return shop.collections;}// collections is from shopReducer INITIAL_STATE\n);//converting object key to array and mapping for collection-overview\nexport var selectCollectionsForPreview=createSelector([selectCollections],function(collections){return collections?Object.keys(collections).map(function(key){return collections[key];}):[];});export var selectCollection=function selectCollection(collectionUrlParam){return createSelector([selectCollections],function(collections){return collections?collections[collectionUrlParam]:null;});};export var selectIsCollectionFetching=createSelector([selectShop],function(shop){return shop.isFetching;});export var selectIsCollectionsLoaded=createSelector([selectShop],function(shop){return!!shop.collections;}// returns boolean if collections are loaded or not.\n);","map":{"version":3,"sources":["/Users/corycatherall/Desktop/kc-clothing/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAxB,CAAwC;AAExC,MAAO,IAAMC,CAAAA,iBAAiB,CAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,CAE7C,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACE,WAAT,EAAqB;AAFoB,CAAxC,CAKP;AACA,MAAO,IAAMC,CAAAA,2BAA2B,CAAGN,cAAc,CACzD,CAACI,iBAAD,CADyD,CAEzD,SAAAC,WAAW,QAAKA,CAAAA,WAAW,CAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6B,SAAAC,GAAG,QAAIL,CAAAA,WAAW,CAACK,GAAD,CAAf,EAAhC,CAAH,CAA2D,EAA3E,EAF8C,CAAlD,CAKP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,kBAAkB,QAAIZ,CAAAA,cAAc,CAChE,CAACI,iBAAD,CADgE,CAEhE,SAAAC,WAAW,QAAKA,CAAAA,WAAW,CAAGA,WAAW,CAACO,kBAAD,CAAd,CAAqC,IAArD,EAFqD,CAAlB,EAA3C,CAKP,MAAO,IAAMC,CAAAA,0BAA0B,CAAGb,cAAc,CACrD,CAACC,UAAD,CADqD,CAErD,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACW,UAAT,EAFiD,CAAjD,CAKN,MAAO,IAAMC,CAAAA,yBAAyB,CAAGf,cAAc,CACrD,CAACC,UAAD,CADqD,CAErD,SAAAE,IAAI,QAAI,CAAC,CAACA,IAAI,CAACE,WAAX,EAAuB;AAF0B,CAAhD","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop; //shop is from rootReducer where {shop: shopReducer}\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections // collections is from shopReducer INITIAL_STATE\n);\n\n//converting object key to array and mapping for collection-overview\nexport const selectCollectionsForPreview = createSelector(\n[selectCollections],\ncollections => (collections ? Object.keys(collections).map(key => collections[key]) : [])\n);\n\nexport const selectCollection = collectionUrlParam => createSelector(\n    [selectCollections],\n    collections => (collections ? collections[collectionUrlParam] : null) \n  );\n\nexport const selectIsCollectionFetching = createSelector(\n   [selectShop],\n   shop => shop.isFetching\n );\n\n export const selectIsCollectionsLoaded = createSelector(\n   [selectShop],\n   shop => !!shop.collections // returns boolean if collections are loaded or not.\n )\n\n"]},"metadata":{},"sourceType":"module"}
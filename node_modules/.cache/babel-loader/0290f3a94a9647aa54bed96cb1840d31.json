{"ast":null,"code":"var _jsxFileName = \"/Users/corycatherall/Desktop/kc-clothing/client/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStart\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]); //CollectionPageContainer and CollectionsOverviewContainer are using the container patter to keep state updates regarding spinner HoC -\n  // where they belong with their respective components. (isloaded and isFetching should be handled through CollectionOverview and CollectionPage)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/corycatherall/Desktop/kc-clothing/client/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","fetchCollectionsStart","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAqC,+BAArC;AAIA,OAAOC,4BAAP,MAAyC,sEAAzC;AAGA,OAAOC,uBAAP,MAAoC,oCAApC;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASJ,EAAAA;AAAT,CAAD,KAAsC;AAErDH,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT,CAFqD,CASnD;AACA;;AACA,sBAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEJ,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAEH,uBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF;AAQD,CAnBH;;AAwBA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,qBAAqB,EAAE,MAAMO,QAAQ,CAACP,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOO,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\n\n\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\nimport { fetchCollectionsStart} from '../../redux/shop/shop.actions';\n\n\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\n\n\nimport CollectionPageContainer from '../collection/collection.container';\n\n\nconst ShopPage = ({ match, fetchCollectionsStart }) => {\n\n  useEffect(() => {\n    fetchCollectionsStart()\n  }, [fetchCollectionsStart])\n  \n\n  \n   \n    //CollectionPageContainer and CollectionsOverviewContainer are using the container patter to keep state updates regarding spinner HoC -\n    // where they belong with their respective components. (isloaded and isFetching should be handled through CollectionOverview and CollectionPage)\n    return  (\n      \n      <div className='shop-page'>            \n        <Route exact path={`${match.path}`} component={CollectionsOverviewContainer} />\n        <Route path={`${match.path}/:collectionId`} component={CollectionPageContainer} />\n      </div>\n     \n    ); \n  }\n\n\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}
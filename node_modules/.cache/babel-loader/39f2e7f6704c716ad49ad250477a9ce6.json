{"ast":null,"code":"import _regeneratorRuntime from\"/Users/corycatherall/Desktop/kc-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(clearCartOnSignOut),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(onSignOutSuccess),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(cartSagas);import{all,call,takeLatest,put}from'redux-saga/effects';import UserActionTypes from'../user/user.types';import{clearCart}from'./cart.actions';export function clearCartOnSignOut(){return _regeneratorRuntime.wrap(function clearCartOnSignOut$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(clearCart());case 2:case\"end\":return _context.stop();}}},_marked);};// subscribes to an action type to be dispatched. if action type comes through, runs clearCartOnSignOut.\nexport function onSignOutSuccess(){return _regeneratorRuntime.wrap(function onSignOutSuccess$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(UserActionTypes.SIGN_OUT_SUCCESS,clearCartOnSignOut);case 2:case\"end\":return _context2.stop();}}},_marked2);};export function cartSagas(){return _regeneratorRuntime.wrap(function cartSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(onSignOutSuccess)]);case 2:case\"end\":return _context3.stop();}}},_marked3);};","map":{"version":3,"sources":["/Users/corycatherall/Desktop/kc-clothing/client/src/redux/cart/cart.sagas.js"],"names":["clearCartOnSignOut","onSignOutSuccess","cartSagas","all","call","takeLatest","put","UserActionTypes","clearCart","SIGN_OUT_SUCCESS"],"mappings":"+MAKiBA,kB,iDAKAC,gB,iDAIAC,S,EAdjB,OAASC,GAAT,CAAcC,IAAd,CAAoBC,UAApB,CAAgCC,GAAhC,KAA0C,oBAA1C,CAEA,MAAQC,CAAAA,eAAR,KAA8B,oBAA9B,CACA,OAASC,SAAT,KAA0B,gBAA1B,CAEA,MAAO,SAAUR,CAAAA,kBAAV,8IACH,MAAMM,CAAAA,GAAG,CAACE,SAAS,EAAV,CAAT,CADG,sDAEN,CAED;AACA,MAAO,SAAUP,CAAAA,gBAAV,gJACH,MAAMI,CAAAA,UAAU,CAACE,eAAe,CAACE,gBAAjB,CAAmCT,kBAAnC,CAAhB,CADG,wDAEN,CAED,MAAO,SAAUE,CAAAA,SAAV,yIACH,MAAMC,CAAAA,GAAG,CAAC,CAACC,IAAI,CAACH,gBAAD,CAAL,CAAD,CAAT,CADG,wDAEN","sourcesContent":["import { all, call, takeLatest, put} from 'redux-saga/effects';\n\nimport  UserActionTypes  from '../user/user.types';\nimport { clearCart } from './cart.actions';\n\nexport function* clearCartOnSignOut() {\n    yield put(clearCart());\n};\n\n// subscribes to an action type to be dispatched. if action type comes through, runs clearCartOnSignOut.\nexport function* onSignOutSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut )\n};\n\nexport function* cartSagas() {\n    yield(all([call(onSignOutSuccess)]))\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/corycatherall/Desktop/kc-clothing/client/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport CartItem from '../cart-item/cart-item.component';\nimport { CartDropDownContainer, EmptyMessageComponent, CartItemsContainer, CustomButtonContainer } from './cart-dropdown.styles'; // dispatch is passed as a prop to component from connect if connect is not passed a second argument of mapDispatchToProps\n// usefull to not have to write unnecessary mapDispatchToProps\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/React.createElement(CartDropDownContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(CartItemsContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }\n}, cartItems.length ? // if greater than zero render cartItems otherwise render empty message span\ncartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }\n})) : /*#__PURE__*/React.createElement(EmptyMessageComponent, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 17\n  }\n}, \"Your Cart Is Empty\")), /*#__PURE__*/React.createElement(CustomButtonContainer, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}, \"GO TO CHECKOUT\"));\n\nexport default withRouter(CartDropdown); //evaluates from inside out\n// higher order component withRouter() taking:\n// the HoC connect(mapStateToProps)(CartDropdown) as an argument","map":{"version":3,"sources":["/Users/corycatherall/Desktop/kc-clothing/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","withRouter","toggleCartHidden","CartItem","CartDropDownContainer","EmptyMessageComponent","CartItemsContainer","CustomButtonContainer","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;AAIA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SACQC,qBADR,EAEQC,qBAFR,EAGQC,kBAHR,EAIQC,qBAJR,QAKW,wBALX,C,CAOA;AACA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,kBACjB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQF,SAAS,CAACG,MAAV,GAAmB;AACnBH,SAAS,CAACI,GAAV,CAAeC,QAAQ,iBACnB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADA,gBAKA,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPR,CADJ,eAWI,oBAAC,qBAAD;AAAuB,EAAA,OAAO,EAC1B,MAAM;AACFJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;AACH,GAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,CADJ;;AAsBA,eAAeD,UAAU,CAACO,YAAD,CAAzB,C,CAAyC;AAC2B;AACA","sourcesContent":["import React from 'react';\n\nimport { withRouter } from 'react-router-dom';\n\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\n\n\nimport CartItem from '../cart-item/cart-item.component';\nimport {\n        CartDropDownContainer,\n        EmptyMessageComponent,\n        CartItemsContainer,\n        CustomButtonContainer \n    } from './cart-dropdown.styles';\n\n// dispatch is passed as a prop to component from connect if connect is not passed a second argument of mapDispatchToProps\n// usefull to not have to write unnecessary mapDispatchToProps\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n    <CartDropDownContainer>\n        <CartItemsContainer>\n            {   \n                cartItems.length ? // if greater than zero render cartItems otherwise render empty message span\n                cartItems.map( cartItem => (\n                    <CartItem key={cartItem.id} item={cartItem} />\n                ))\n                :\n                <EmptyMessageComponent>Your Cart Is Empty</EmptyMessageComponent>\n            }\n        </CartItemsContainer>\n        <CustomButtonContainer onClick={\n            () => { \n                history.push('/checkout'); \n                dispatch(toggleCartHidden());\n            }}\n        >GO TO CHECKOUT</CustomButtonContainer>\n    </CartDropDownContainer>\n);\n\n\nexport default withRouter(CartDropdown); //evaluates from inside out\n                                                                    // higher order component withRouter() taking:\n                                                                    // the HoC connect(mapStateToProps)(CartDropdown) as an argument\n"]},"metadata":{},"sourceType":"module"}
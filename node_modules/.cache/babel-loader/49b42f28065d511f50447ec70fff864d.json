{"ast":null,"code":"import{combineReducers}from'redux';import{persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';import userReducer from'./user/user.reducer';import cartReducer from'./cart/cart.reducer';import directoryReducer from'./directory/directory.reducer';import shopReducer from'./shop/shop.reducer';//session persistance\nvar persistConfig={key:'root',storage:storage,whiteList:['cart']};// key is set to 'root' from the rootReducer\n// whitelist is an array containing string name of any reducers we want to store.\nvar rootReducer=combineReducers({user:userReducer,cart:cartReducer,directory:directoryReducer,shop:shopReducer});export default persistReducer(persistConfig,rootReducer);","map":{"version":3,"sources":["/Users/corycatherall/Desktop/kc-clothing/client/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","shopReducer","persistConfig","key","whiteList","rootReducer","user","cart","directory","shop"],"mappings":"AAAA,OAASA,eAAT,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+BAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CAEA;AACA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,GAAG,CAAE,MADa,CAElBN,OAAO,CAAPA,OAFkB,CAGlBO,SAAS,CAAE,CAAC,MAAD,CAHO,CAAtB,CAKA;AACA;AAGA,GAAMC,CAAAA,WAAW,CAAGV,eAAe,CAAC,CAChCW,IAAI,CAAER,WAD0B,CAEhCS,IAAI,CAAER,WAF0B,CAGhCS,SAAS,CAAER,gBAHqB,CAIhCS,IAAI,CAAER,WAJ0B,CAAD,CAAnC,CAOA,cAAeL,CAAAA,cAAc,CAACM,aAAD,CAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport userReducer from './user/user.reducer';\nimport cartReducer from './cart/cart.reducer';\nimport directoryReducer from './directory/directory.reducer';\nimport shopReducer from './shop/shop.reducer';\n\n//session persistance\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whiteList: ['cart'] \n}\n// key is set to 'root' from the rootReducer\n// whitelist is an array containing string name of any reducers we want to store.\n\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    cart: cartReducer,\n    directory: directoryReducer,\n    shop: shopReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);"]},"metadata":{},"sourceType":"module"}
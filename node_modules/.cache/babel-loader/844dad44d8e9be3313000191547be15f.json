{"ast":null,"code":"import{createSelector}from'reselect';// input selector (doesn't use createSelector)\n// gives access to state.cart from root reducer.\nvar selectCart=function selectCart(state){return state.cart;};// input selectors are passed as params to createSelector()\n//in the order they are written\nexport var selectCartItems=createSelector([selectCart],function(cart){return cart.cartItems;});//\nexport var selectCartHidden=createSelector([selectCart],function(cart){return cart.hidden;});//calculating total items in cart\nexport var selectCartItemsCount=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(accumulatedQuantity,cartItem){return accumulatedQuantity+cartItem.quantity;},0);});//calculating price total for cart\nexport var selectCartTotal=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(accumulatedQuantity,cartItem){return accumulatedQuantity+cartItem.quantity*cartItem.price;},0);});","map":{"version":3,"sources":["/Users/corycatherall/Desktop/kc-clothing/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CAEA;AACA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAxB,CAGA;AACA;AACC,MAAO,IAAMC,CAAAA,eAAe,CAAGJ,cAAc,CAC1C,CAACC,UAAD,CAD0C,CAE1C,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACE,SAAT,EAFsC,CAAtC,CAKR;AACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,CAE1C,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACI,MAAT,EAFsC,CAAvC,CAKH;AACJ,MAAO,IAAMC,CAAAA,oBAAoB,CAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,CAE9C,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAACI,MAAV,CAAiB,SAACC,mBAAD,CAAsBC,QAAtB,QAAmCD,CAAAA,mBAAmB,CAAGC,QAAQ,CAACC,QAAlE,EAAjB,CACb,CADa,CAAJ,EAFqC,CAA3C,CAOP;AACA,MAAO,IAAMC,CAAAA,eAAe,CAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,CAEzC,SAAAC,SAAS,QACRA,CAAAA,SAAS,CAACI,MAAV,CACI,SAACC,mBAAD,CAAsBC,QAAtB,QACAD,CAAAA,mBAAmB,CAAGC,QAAQ,CAACC,QAAT,CAAoBD,QAAQ,CAACG,KADnD,EADJ,CAGI,CAHJ,CADQ,EAFgC,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\n// input selector (doesn't use createSelector)\n// gives access to state.cart from root reducer.\nconst selectCart = state => state.cart;\n\n\n// input selectors are passed as params to createSelector()\n//in the order they are written\n export const selectCartItems = createSelector(\n    [selectCart],\n    cart => cart.cartItems\n);\n\n//\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n    );\n\n    //calculating total items in cart\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity ,\n    0\n   )\n);\n\n//calculating price total for cart\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    cartItems => \n     cartItems.reduce(\n         (accumulatedQuantity, cartItem) =>\n         accumulatedQuantity + cartItem.quantity * cartItem.price,\n         0 \n     )\n);"]},"metadata":{},"sourceType":"module"}
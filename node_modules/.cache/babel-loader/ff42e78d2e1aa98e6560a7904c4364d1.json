{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/corycatherall/Desktop/kc-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\nmin-width: 165px;\\nwidth: auto;\\nheight: 50px;\\nletter-spacing: 0.5px;\\nline-height: 50px;\\npadding: 0 35px 0 35px;\\nfont-size: 15px;\\ntext-transform: uppercase;\\nfont-family: 'Open Sans Condensed';\\nfont-weight: bolder;\\ncursor: pointer;\\ndisplay: flex;\\njustify-content: center;\\n\\n\",\" \\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\nbackground-color: #4285f4;\\ncolor: white;\\n&:hover {\\n    background-color: #357ae8;\\n    border: none;\\n}\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\nbackground-color: white;\\ncolor: black;\\nborder: 1px solid black;\\n&:hover{\\n  background-color: black;\\n  color: white;\\n  border: none;\\n}\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\nbackground-color: black;\\ncolor: white;\\nborder: none;\\n&:hover {\\n    background-color: white;\\n    color: black;\\n    border: 1px solid black;\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import styled,{css}from'styled-components';// { css } lets us write css that we can then use to conditionally render css such as below\nvar buttonStyles=css(_templateObject());var invertedButtonStyles=css(_templateObject2());var googleSignInStyles=css(_templateObject3());// function called inside custombuttoncontainer to conditionally render styles\n// based on props of button.\nvar getButtonStyles=function getButtonStyles(props){if(props.isGoogleSignIn){return googleSignInStyles;}return props.inverted?invertedButtonStyles:buttonStyles;};export var CustomButtonContainer=styled.button(_templateObject4(),getButtonStyles);//${getButtonStyles} being called inside the styled component to conditionaly render\n//styles.","map":{"version":3,"sources":["/Users/corycatherall/Desktop/kc-clothing/client/src/components/custom-button/custom-button.styles.jsx"],"names":["styled","css","buttonStyles","invertedButtonStyles","googleSignInStyles","getButtonStyles","props","isGoogleSignIn","inverted","CustomButtonContainer","button"],"mappings":"s5CAAA,MAAOA,CAAAA,MAAP,EAAiBC,GAAjB,KAA4B,mBAA5B,CACA;AACA,GAAMC,CAAAA,YAAY,CAAGD,GAAH,mBAAlB,CAWA,GAAME,CAAAA,oBAAoB,CAAGF,GAAH,oBAA1B,CAWA,GAAMG,CAAAA,kBAAkB,CAAGH,GAAH,oBAAxB,CASA;AACA;AACA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,GAAGA,KAAK,CAACC,cAAT,CAAyB,CACrB,MAAOH,CAAAA,kBAAP,CACH,CACD,MAAOE,CAAAA,KAAK,CAACE,QAAN,CAAiBL,oBAAjB,CAAwCD,YAA/C,CACH,CALD,CAOA,MAAO,IAAMO,CAAAA,qBAAqB,CAAGT,MAAM,CAACU,MAAV,oBAehCL,eAfgC,CAA3B,CAiBP;AACA","sourcesContent":["import styled, { css } from 'styled-components';\n// { css } lets us write css that we can then use to conditionally render css such as below\nconst buttonStyles = css`\nbackground-color: black;\ncolor: white;\nborder: none;\n&:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n`;\n\nconst invertedButtonStyles = css`\nbackground-color: white;\ncolor: black;\nborder: 1px solid black;\n&:hover{\n  background-color: black;\n  color: white;\n  border: none;\n}\n`;\n\nconst googleSignInStyles = css`\nbackground-color: #4285f4;\ncolor: white;\n&:hover {\n    background-color: #357ae8;\n    border: none;\n}\n`;\n\n// function called inside custombuttoncontainer to conditionally render styles\n// based on props of button.\nconst getButtonStyles = props => {\n    if(props.isGoogleSignIn) {\n        return googleSignInStyles\n    }\n    return props.inverted ? invertedButtonStyles : buttonStyles;\n}\n\nexport const CustomButtonContainer = styled.button`\nmin-width: 165px;\nwidth: auto;\nheight: 50px;\nletter-spacing: 0.5px;\nline-height: 50px;\npadding: 0 35px 0 35px;\nfont-size: 15px;\ntext-transform: uppercase;\nfont-family: 'Open Sans Condensed';\nfont-weight: bolder;\ncursor: pointer;\ndisplay: flex;\njustify-content: center;\n\n${getButtonStyles} \n`;\n//${getButtonStyles} being called inside the styled component to conditionaly render\n//styles.\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import UserActionTypes from './user.types';\n\nconst INITIAL_STATE = () => ({\n  currentUser: null,\n  isFetching: null,\n  error: null\n});\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return { ...state,\n        currentUser: action.payload,\n        isFetching: false,\n        error: null // sets error back to null if there was error state \n\n      };\n\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return { ...state,\n        currentUser: null,\n        error: null\n      };\n\n    case UserActionTypes.SIGN_UP_START:\n    case UserActionTypes.EMAIL_SIGN_IN_START:\n      return { ...state,\n        isFetching: true\n      };\n\n    case UserActionTypes.SIGN_UP_SUCCESS:\n      return { ...state,\n        currentUser: action.payload,\n        isFetching: false,\n        error: null\n      };\n    // can stack cases that return the same to reduce code writing\n\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return { ...state,\n        isFetching: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/corycatherall/Desktop/kc-clothing/client/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","isFetching","error","userReducer","state","action","type","SIGN_IN_SUCCESS","payload","SIGN_OUT_SUCCESS","SIGN_UP_START","EMAIL_SIGN_IN_START","SIGN_UP_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_FAILURE","SIGN_UP_FAILURE"],"mappings":"AAAA,OAAQA,eAAR,MAA8B,cAA9B;;AAEA,MAAMC,aAAa,GAAG,OAAO;AACzBC,EAAAA,WAAW,EAAE,IADY;AAEzBC,EAAAA,UAAU,EAAE,IAFa;AAGzBC,EAAAA,KAAK,EAAE;AAHkB,CAAP,CAAtB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AAClD,UAAQA,MAAM,CAACC,IAAf;AAEO,SAAKR,eAAe,CAACS,eAArB;AACK,aAAO,EACH,GAAGH,KADA;AAEJJ,QAAAA,WAAW,EAAEK,MAAM,CAACG,OAFhB;AAGJP,QAAAA,UAAU,EAAE,KAHR;AAIJC,QAAAA,KAAK,EAAE,IAJH,CAIQ;;AAJR,OAAP;;AAML,SAAKJ,eAAe,CAACW,gBAArB;AACI,aAAO,EACH,GAAGL,KADA;AAEHJ,QAAAA,WAAW,EAAE,IAFV;AAGHE,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAKJ,eAAe,CAACY,aAArB;AACA,SAAKZ,eAAe,CAACa,mBAArB;AACK,aAAO,EACH,GAAGP,KADA;AAEHH,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIL,SAAKH,eAAe,CAACc,eAArB;AACI,aAAO,EACH,GAAGR,KADA;AAEHJ,QAAAA,WAAW,EAAEK,MAAM,CAACG,OAFjB;AAGHP,QAAAA,UAAU,EAAE,KAHT;AAIHC,QAAAA,KAAK,EAAE;AAJJ,OAAP;AAOJ;;AACA,SAAKJ,eAAe,CAACe,eAArB;AACA,SAAKf,eAAe,CAACgB,gBAArB;AACA,SAAKhB,eAAe,CAACiB,eAArB;AACA,aAAO,EACH,GAAGX,KADA;AAEHH,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAHX,OAAP;;AAMJ;AACI,aAAOJ,KAAP;AAxCP;AA0CJ,CA3CD;;AA6CA,eAAeD,WAAf","sourcesContent":["import  UserActionTypes  from './user.types'\n\nconst INITIAL_STATE = () => ({\n    currentUser: null,\n    isFetching: null,\n    error: null\n})\n\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n     switch (action.type) {\n         \n            case UserActionTypes.SIGN_IN_SUCCESS:\n                 return {\n                     ...state,\n                    currentUser: action.payload,\n                    isFetching: false,\n                    error: null // sets error back to null if there was error state \n                };\n            case UserActionTypes.SIGN_OUT_SUCCESS:\n                return {\n                    ...state,\n                    currentUser: null,\n                    error: null\n                }\n            case UserActionTypes.SIGN_UP_START:\n            case UserActionTypes.EMAIL_SIGN_IN_START:\n                 return {\n                     ...state,\n                     isFetching: true\n                 }\n            case UserActionTypes.SIGN_UP_SUCCESS:\n                return {\n                    ...state,\n                    currentUser: action.payload,\n                    isFetching: false,\n                    error: null\n                }\n            \n            // can stack cases that return the same to reduce code writing\n            case UserActionTypes.SIGN_IN_FAILURE:\n            case UserActionTypes.SIGN_OUT_FAILURE:\n            case UserActionTypes.SIGN_UP_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                error: action.payload\n            }\n\n        default:\n            return state;\n     }\n};\n\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from'react';import{withRouter}from'react-router-dom';import{toggleCartHidden}from'../../redux/cart/cart.actions';import CartItem from'../cart-item/cart-item.component';import{CartDropDownContainer,EmptyMessageComponent,CartItemsContainer,CustomButtonContainer}from'./cart-dropdown.styles';// dispatch is passed as a prop to component from connect if connect is not passed a second argument of mapDispatchToProps\n// usefull to not have to write unnecessary mapDispatchToProps\nvar CartDropdown=function CartDropdown(_ref){var cartItems=_ref.cartItems,history=_ref.history,dispatch=_ref.dispatch;return/*#__PURE__*/React.createElement(CartDropDownContainer,null,/*#__PURE__*/React.createElement(CartItemsContainer,null,cartItems.length?// if greater than zero render cartItems otherwise render empty message span\ncartItems.map(function(cartItem){return/*#__PURE__*/React.createElement(CartItem,{key:cartItem.id,item:cartItem});}):/*#__PURE__*/React.createElement(EmptyMessageComponent,null,\"Your Cart Is Empty\")),/*#__PURE__*/React.createElement(CustomButtonContainer,{onClick:function onClick(){history.push('/checkout');dispatch(toggleCartHidden());}},\"GO TO CHECKOUT\"));};export default withRouter(CartDropdown);//evaluates from inside out\n// higher order component withRouter() taking:\n// the HoC connect(mapStateToProps)(CartDropdown) as an argument","map":{"version":3,"sources":["/Users/corycatherall/Desktop/kc-clothing/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","withRouter","toggleCartHidden","CartItem","CartDropDownContainer","EmptyMessageComponent","CartItemsContainer","CustomButtonContainer","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,OAASC,gBAAT,KAAiC,+BAAjC,CAIA,MAAOC,CAAAA,QAAP,KAAqB,kCAArB,CACA,OACQC,qBADR,CAEQC,qBAFR,CAGQC,kBAHR,CAIQC,qBAJR,KAKW,wBALX,CAOA;AACA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,OAAd,MAAcA,OAAd,CAAuBC,QAAvB,MAAuBA,QAAvB,oBACjB,oBAAC,qBAAD,mBACI,oBAAC,kBAAD,MAEQF,SAAS,CAACG,MAAV,CAAmB;AACnBH,SAAS,CAACI,GAAV,CAAe,SAAAC,QAAQ,qBACnB,oBAAC,QAAD,EAAU,GAAG,CAAEA,QAAQ,CAACC,EAAxB,CAA4B,IAAI,CAAED,QAAlC,EADmB,EAAvB,CADA,cAKA,oBAAC,qBAAD,2BAPR,CADJ,cAWI,oBAAC,qBAAD,EAAuB,OAAO,CAC1B,kBAAM,CACFJ,OAAO,CAACM,IAAR,CAAa,WAAb,EACAL,QAAQ,CAACT,gBAAgB,EAAjB,CAAR,CACH,CAJL,mBAXJ,CADiB,EAArB,CAsBA,cAAeD,CAAAA,UAAU,CAACO,YAAD,CAAzB,CAAyC;AAC2B;AACA","sourcesContent":["import React from 'react';\n\nimport { withRouter } from 'react-router-dom';\n\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\n\n\nimport CartItem from '../cart-item/cart-item.component';\nimport {\n        CartDropDownContainer,\n        EmptyMessageComponent,\n        CartItemsContainer,\n        CustomButtonContainer \n    } from './cart-dropdown.styles';\n\n// dispatch is passed as a prop to component from connect if connect is not passed a second argument of mapDispatchToProps\n// usefull to not have to write unnecessary mapDispatchToProps\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n    <CartDropDownContainer>\n        <CartItemsContainer>\n            {   \n                cartItems.length ? // if greater than zero render cartItems otherwise render empty message span\n                cartItems.map( cartItem => (\n                    <CartItem key={cartItem.id} item={cartItem} />\n                ))\n                :\n                <EmptyMessageComponent>Your Cart Is Empty</EmptyMessageComponent>\n            }\n        </CartItemsContainer>\n        <CustomButtonContainer onClick={\n            () => { \n                history.push('/checkout'); \n                dispatch(toggleCartHidden());\n            }}\n        >GO TO CHECKOUT</CustomButtonContainer>\n    </CartDropDownContainer>\n);\n\n\nexport default withRouter(CartDropdown); //evaluates from inside out\n                                                                    // higher order component withRouter() taking:\n                                                                    // the HoC connect(mapStateToProps)(CartDropdown) as an argument\n"]},"metadata":{},"sourceType":"module"}